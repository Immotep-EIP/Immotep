name: Build Backend

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Check build, linter and unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Code/Server/

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install swag
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Build
        run: ./build.sh

      - name: Install linter
        run: sudo snap install golangci-lint --classic

      - name: Run linter
        run: ./run_linter.sh

      - name: Test
        id: test
        run: |
          OUTPUT=$(./run_tests.sh no-interactive)
          echo "# Coverage report" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`txt" >> $GITHUB_STEP_SUMMARY
          echo "$OUTPUT" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "COVERAGE=$(echo "$OUTPUT" | grep total | grep -o '[0-9]\+\(\.[0-9]\+\)\?' | cut -d. -f1)" >> "$GITHUB_OUTPUT"

      - name: Check coverage requirements
        run: |
          COVERAGE=${{ steps.test.outputs.COVERAGE }}
          if [ "$COVERAGE" -lt 80 ]; then
            echo "The unit test coverage must me greater than 80%"
            exit 1
          fi

  deploy-dev:
    name: Deploy on dev VM
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_SERVER_DEV }}
          username: ${{ vars.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: cd /home/${{ vars.DEPLOY_USER }}/Immotep/Code/Server && git switch dev && git pull && docker compose down && docker compose up --build -d
